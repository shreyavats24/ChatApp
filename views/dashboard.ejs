<%- include('layouts/headers.ejs') %>
    <h1 class="mb-4">Hi, <%=user.username%>!</h1>
    <span style="display:none;" id="senderId">
        <%=user.id%>
    </span>
    <div class="row">
        <div class="col-md-4">
            <% if(users.length){ %>
                <% for(var i=0;i<users.length;i++) {%>
                    <ul class="list-group" id="<%=users[i]._id%>">
                        <li class="list-group-item  cursor-pointer user-list"
                            id="<%=users[i]._id%>">
                            <img src="<%=users[i].image%>" id="profile" alt="image" width="50px" height="50px">
                            <span id="nameOfuser">
                                <%=users[i].username%>
                            </span>
                            <%if(users[i].is_online==1){%>
                                <sup class="online-status" id="<%=users[i]._id%>-status">Online</sup>
                                <%} else{%>
                                    <sup class="offline-status" id="<%=users[i]._id%>-status">Offline</sup>
                                    <% } %>

                        </li>
                    </ul>
                    <%}%>
                        <% } %>
        </div>
        <div class="col-md-8">
            <h3 id="start-head"> Click to Start chat </h3>
            <div id="chat-section">

                <div id="chat-container">
                    <div class="current-user-chat">
                        <!-- <p><span class="sentMsg"> hii </span>12:45</p> -->
                    </div>
                    <div class="receivedChat">
                        <!-- <p><span class="receivedMsg"> hloo</span></p> -->
                    </div>
                </div>

                <form action="" id="chat-form" method="post">
                    <input type="text" name="message" id="message" placeholder="Enter message" class="border" required>
                    <input type="submit" id="sendBtn" value="Send" class="btn">
                </form>
            </div>

        </div>
    </div>
    <script src="/socket.io/socket.io.js"></script>
    <script>
        var senderId = document.getElementById("senderId").innerText.trim();
        var chatSection = document.getElementById("chat-container");
        // senderId = senderId.innerHTML
        // = '<%=user._id%>';
        // console.log("S",senderId);
        // var username = '<%=user.username%>';
        // Client-side (JavaScript in dashboard.ejs)
        const token = document.cookie.split('; ').find(row => row.startsWith('mycookie=')).split('=')[1];
        // console.log(token);

        const socket = io({
            auth: {
                token: token  // Send the JWT token from cookie to the server
            }
        });

        // var socket = io();
        var receiverId;
        var users = document.querySelectorAll(".user-list");
        users.forEach(user => user.classList.remove('highlighted'));
        users.forEach((elem) => {
            elem.addEventListener("click", (e) => {
                receiverId = e.target.parentElement.id;
                receiverId = receiverId.trim();
                users.forEach(user => user.classList.remove('highlighted'));
                if (e.target.parentElement.tagName == "UL") {
                    // e.target.parentElement.classList.add('highlighted');
                    e.target.classList.add('highlighted');
                }
                else {
                    e.target.parentElement.classList.add('highlighted');
                }

                var head = document.getElementById("start-head");
                head.style.display = "none";
                var chatSection = document.getElementById("chat-section");
                chatSection.style.display = "block";
                socket.emit("existing-chat", { senderId, receiverId });
            })
        })
        // io.emit('userConnected',{userId:senderId,name:username});
        socket.on('onlineUser', (userId) => {
            userId = userId + "-status";
            var elemId = document.getElementById(userId);
            console.log(elemId);
            if (elemId) {
                elemId.classList.remove('offline-status');
                // console.log(elemId);
                elemId.classList.add('online-status');
                elemId.innerHTML = "Online";
            }
        })
        socket.on('offlineUser', (userId) => {
            // console.log(userId);
            userId = userId + "-status";
            var elemId = document.getElementById(userId);
            if (elemId) {
                elemId.classList.remove('online-status');
                elemId.classList.add('offline-status');
                elemId.innerHTML = "Offline";
            }
        })

        // save chat of user
        var sendBtn = document.getElementById("sendBtn");
        sendBtn.addEventListener("click", (e) => {
            e.preventDefault();
            // console.log("r",receiverId);
            var message = document.getElementById("message");
            message = message.value;
            socket.emit('chatMessage', { message, receiverId });
            fetch("/saveChat", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({ receiverId: receiverId, message: message })
            }).then((res) => {
                if (res.ok)
                    return res.json();
            }).then((data) => {
                if (data.success == true) {
                    var time = document.createElement("span");
                    let date = new Date(data.time);
                    let timeOptions = { hour: '2-digit', minute: '2-digit', hour12: true };
                    let timeString = date.toLocaleTimeString([], timeOptions);
                    var div = document.createElement("div");
                    div.classList.add("current-user-chat");
                    var p = document.createElement("p");
                    var span = document.createElement("span");
                    span.classList.add("sentMsg");
                    span.innerHTML = message;
                    time.classList.add("time");
                    time.innerText = timeString;
                    p.appendChild(time);
                    p.appendChild(span);
                    p.classList.add("msgParent");
                    div.appendChild(p);
                    chatSection.appendChild(div);
                    let msg = document.getElementById("message");
                    msg.value = "";
                }
                else {
                    alert(data.msg);
                }
            }).catch((err) => console.log("Error saving Chat :", err));

        })
        socket.on('message', (data) => {
            console.log("message", data);
            console.log("senderId", senderId);
            console.log("receiverId", receiverId);
            if (senderId == data.receiver_id && receiverId == data.sender_id) {
                let date = new Date();
                let timeOptions = { hour: '2-digit', minute: '2-digit', hour12: true };
                let timeString = date.toLocaleTimeString([], timeOptions);
                var chatSection = document.getElementById("chat-container");
                var div = document.createElement("div");
                var p = document.createElement("p");
                var span = document.createElement("span");
                var time = document.createElement("span");
                span.classList.add("receivedMsg");
                span.innerHTML = data.msg;
                time.textContent = timeString
                time.classList.add("time");
                p.appendChild(span);
                p.appendChild(time);
                p.classList.add("msgParent");
                div.classList.add("receivedChat");
                div.appendChild(p);
                chatSection.appendChild(div);
            }
        })
        socket.on('loadChats', (data) => {
            chatSection.innerHTML = "";
            var chats = data.chats;
            if (chats.length > 0) {
                chats.forEach((elem) => {
                    if (elem.sender_id == senderId) {
                        let date = new Date(elem.createdAt);
                        let timeOptions = { hour: '2-digit', minute: '2-digit', hour12: true };
                        let timeString = date.toLocaleTimeString([], timeOptions);
                        var div = document.createElement("div");
                        div.classList.add("current-user-chat");
                        var p = document.createElement("p");
                        var span = document.createElement("span");
                        span.classList.add("sentMsg");
                        span.innerHTML = elem.message;
                        var time = document.createElement("span");
                        time.classList.add("time");
                        time.innerHTML = timeString;
                        p.appendChild(span);
                        p.append(time);
                        p.classList.add("msgParent");
                        div.appendChild(p);
                        chatSection.appendChild(div);
                    }
                    else {
                        let date = new Date(elem.createdAt);
                        let timeOptions = { hour: '2-digit', minute: '2-digit', hour12: true };
                        let timeString = date.toLocaleTimeString([], timeOptions);
                        var div = document.createElement("div");
                        var p = document.createElement("p");
                        var span = document.createElement("span");
                        span.classList.add("receivedMsg");
                        span.innerHTML = elem.message;
                        var time = document.createElement("span");
                        time.classList.add("time");
                        time.innerHTML = timeString;
                        p.append(time);
                        p.appendChild(span);
                        p.classList.add("msgParent");
                        div.classList.add("receivedChat");
                        div.appendChild(p);
                        chatSection.appendChild(div);
                    }
                })
            }
        })
    </script>
    <!-- <a href="/logout">Logout</a> -->